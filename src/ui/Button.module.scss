@use "./utils/colors.scss";
@use "./utils/font.scss";

@mixin resetButton() {
  outline: none;
  border: none;
  margin: 0;
  overflow: visible;
  cursor: pointer;
}

@mixin elevation($default: null, $hover: null) {
  @if $default {
    &:enabled {
      box-shadow: $default;
    }
  }

  @if $hover {
    &:hover:enabled {
      box-shadow: $hover;
    }
  }
}

@mixin variant($color, $background: transparent) {
  background-color: $background;
  color: $color;

  &:disabled {
    color: rgb(from var(--color-on-surface) r g b / 0.38);

    @if ($background != transparent) {
      background-color: rgb(from var(--color-on-surface) r g b / 0.12);
    }
  }

  &:hover:enabled {
    .state {
      background-color: $color;
      opacity: var(--state-hover-opacity);
    }
  }

  &:focus:enabled {
    .state {
      background-color: $color;
      opacity: var(--state-focus-opacity);
    }
  }

  &:target:enabled {
    .state {
      background-color: $color;
      opacity: var(--state-pressed-opacity);
    }
  }
}

.button {
  @include font.labelLarge;
  @include resetButton;

  height: 40px;
  padding: 0 24px 0 16px;
  position: relative;
  border-radius: var(--corner-full);
  display: flex;
  flex-direction: row;
  align-items: center;

  &:disabled {
    cursor: default;
  }
}

.state {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  border-radius: var(--corner-full);
}

.icon {
  margin-right: 8px;
  font-size: 18px;
  display: flex;
  align-items: center;
}

.button.elevated {
  @include variant(
    $color: var(--color-surface-tint),
    $background: var(--color-surface-container-low)
  );

  @include elevation($default: var(--elevation-1), $hover: var(--elevation-2));
}

.button.filled {
  @include variant(
    $color: var(--color-on-primary),
    $background: var(--color-primary)
  );

  @include elevation($hover: var(--elevation-1));
}

.button.tonal {
  @include variant(
    $color: var(--color-on-secondary-container),
    $background: var(--color-secondary-container)
  );

  @include elevation($hover: var(--elevation-1));
}

.button.text {
  @include variant($color: var(--color-primary));
  padding: 0 12px;
}

.button.outlined {
  @include variant($color: var(--color-primary));
  border: var(--outline);

  &:disabled {
    border-color: rgb(from var(--color-on-surface) r g b / 0.12);
  }
}
